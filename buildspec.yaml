version: 0.2

phases:
  install:
    commands:
      - apt-get update
      - apt-get install zip
  pre_build:
    commands:
      - pip install pytest==3.6.3
      - pip install pyflakes==2.0.0

  build:
    commands:
      # Run Tests
      - pip install -r source/requirements.txt
      - pyflakes ./**/*.py
      - export PYTHONPATH=./source
      - pytest
      ## Tests passed, so build docker
      - echo Building the Docker image...
      - cd source
      ## Repo name
      - export IMAGE_REPO_NAME=awscomprehend-sentiment-demo
      ## Can do automated version tagging, ignoring versions for now
      - export IMAGE_TAG=latest
      - export AWS_ACCOUNT_ID=$(echo $CODEBUILD_BUILD_ARN | cut -d':' -f 5)
      - echo $AWS_ACCOUNT_ID
      - echo $IMAGE_REPO_NAME
      - echo $IMAGE_TAG
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo creating package
    ## This is optional, packaging the solution without docker
      - mkdir buildoutput
      - pip install -r  ~/source/requirements.txt  -t  ~/source
      - cd ~/source && zip -r ../buildoutput/comprehend_sentiment_demo.zip . && cd ..
    # Login to to ECR, this means code build has this role
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
     #Push Docker Image
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

artifacts:
  files:
    - '**/*'
  base-directory: buildoutput